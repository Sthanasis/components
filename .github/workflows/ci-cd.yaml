name: Deploy Storybook

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.19.1]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Node dependencies
        run: npm install
      - name: eslint
        run: npm run lint
      - name: Run tests
        run: npm run test

  dockerize:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Image
        run: docker build -t storybook -f ./Dockerfile.prod .

      - name: Tag Image
        run: docker tag storybook ${{ secrets.DOCKERHUB_REPO }}:${{ github.sha }}

      - name: Push to Dockerhub
        run: docker push ${{ secrets.DOCKERHUB_REPO }}:${{ github.sha }}

      - name: Tag Image as latest
        run: docker tag storybook ${{ secrets.DOCKERHUB_REPO }}:latest

      - name: Update Latest Image
        run: docker push ${{ secrets.DOCKERHUB_REPO }}:latest

  deploy:
    needs: dockerize
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use tag
        uses: nowactions/envsubst@v1
        with:
          input: ./.k8s/deployment.yaml
          output: ./.k8s/deploy-dev.yaml
        env:
          IMAGE: ${{ secrets.DOCKERHUB_REPO }}:${{ github.sha }}
          IP: ${{ secrets.DEV_IP }}

      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUB_CONFIG }}
      - run: kubectl apply -f=./.k8s/deployment.yaml

      - name: Notify slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: notifications
          status: SUCCESS
          color: good

      - name: Notify slack fail
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: notifications
          status: FAILED
          color: danger
